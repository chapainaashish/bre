# Generated by Django 5.0.3 on 2024-05-22 10:18

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ListingAmenities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the amenities title', max_length=1000)),
                ('description', models.CharField(help_text='Enter the amenities description', max_length=2000)),
                ('image', models.ImageField(help_text='Upload the amenities image(80*80)', upload_to='amenities/images')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Property Amenties',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='ListingCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the category name', max_length=1000)),
                ('logo', models.ImageField(help_text='Upload the category logo(80*80)', upload_to='listing/images/', verbose_name='Category Logo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Property Categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ListingSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the subcategory name', max_length=1000)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('category', models.ForeignKey(help_text='Select the category', on_delete=django.db.models.deletion.CASCADE, related_name='subcategory', to='listing.listingcategory')),
            ],
            options={
                'verbose_name_plural': 'Property SubCategories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ListingPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(help_text='Enter the property name', max_length=1000, verbose_name='Property name')),
                ('status', models.CharField(blank=True, choices=[('A', 'Approved'), ('P', 'Pending'), ('D', 'Denied')], default='P', help_text='Choose whether to display on site or not', max_length=1, null=True)),
                ('description', models.TextField(help_text='Enter the property description')),
                ('location', models.CharField(blank=True, help_text=' Enter the location (building, tool, chowk etc) ', max_length=1000, null=True)),
                ('street', models.CharField(help_text=' Enter the street address (street name, area etc)', max_length=1000)),
                ('city', models.CharField(help_text=' Enter the city name', max_length=1000)),
                ('state', models.CharField(blank=True, help_text='Enter the province name', max_length=1000, null=True, verbose_name='Province')),
                ('latitude', models.CharField(blank=True, help_text='Enter the latitude', max_length=15, null=True)),
                ('longitude', models.CharField(blank=True, help_text='Enter the longitude', max_length=15, null=True)),
                ('email', models.EmailField(help_text='Enter the email', max_length=254)),
                ('main_phone', models.CharField(help_text='Enter the phone number', max_length=20, verbose_name='Phone Number')),
                ('mobile_phone', models.CharField(blank=True, help_text='Enter the mobile phone number', max_length=20, null=True)),
                ('image1', models.ImageField(help_text='Upload the listing image(670*390)', upload_to='listing/images/')),
                ('image2', models.ImageField(blank=True, help_text='Upload the listing image(670*390)', null=True, upload_to='listing/images/')),
                ('image3', models.ImageField(blank=True, help_text='Upload the listing image(670*390)', null=True, upload_to='listing/images/')),
                ('image4', models.ImageField(blank=True, help_text='Upload the listing image(670*390)(Available for only paid listing)', null=True, upload_to='listing/images/')),
                ('image5', models.ImageField(blank=True, help_text='Upload the listing image(670*390)(Available for only paid listing)', null=True, upload_to='listing/images/')),
                ('image6', models.ImageField(blank=True, help_text='Upload the listing image(670*390)(Available for only paid listing)', null=True, upload_to='listing/images/')),
                ('price', models.CharField(help_text='Enter the property price', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amenities', models.ManyToManyField(blank=True, help_text='Select the property amenities', to='listing.listingamenities')),
                ('category', models.ForeignKey(blank=True, help_text='Select the property category', on_delete=django.db.models.deletion.CASCADE, related_name='category_listing', to='listing.listingcategory')),
                ('user', models.ForeignKey(help_text='Author who submitted the listing', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subcategory', models.ManyToManyField(help_text='Select the property subcategories', related_name='subcategory_listing', to='listing.listingsubcategory', verbose_name='Categories & Subcategories')),
            ],
            options={
                'verbose_name_plural': 'Properties',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PropertyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(help_text='Subject of the message', max_length=255)),
                ('message', models.TextField(help_text='Contact Description')),
                ('submit_date', models.DateField(auto_now_add=True)),
                ('listing', models.ForeignKey(help_text='Select the property', on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='listing.listingpost')),
                ('user', models.ForeignKey(help_text='Author who created the review', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Properties Contacts',
                'ordering': ('-submit_date',),
            },
        ),
        migrations.CreateModel(
            name='ListingReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the title of your review', max_length=500)),
                ('description', models.TextField(help_text='Enter the description of the review')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('rating', models.PositiveSmallIntegerField(help_text='Enter the rating of the listing between 1 and 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('listing', models.ForeignKey(help_text='Select the property', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='listing.listingpost')),
                ('user', models.ForeignKey(help_text='Author who created the review', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Property Reviews',
                'ordering': ('-created_at',),
                'unique_together': {('user', 'listing')},
            },
        ),
    ]
